============================
 PyCon JP 2011 参加レポート
============================

.. 原がしっぴつします


2011年8月27日(土)に産業技術大学院大学にて `PyCon JP 2011 <http://2011.pycon.jp/>`_ が開催されました。本記事では、本カンファレンスに参加した筆者が、PyCon JP 2011のセッションと、翌日に開催されたSprintについてレポートします。なお、紙面の都合上筆者の気になったセッションを選んでお伝えします。

PyCon JPとは？
==============
アメリカやヨーロッパをはじめとした10カ国以上で行われているPythonのカンファレンス、 `PyCon <http://pycon.org/>`_ の日本版です。日本各地のPythonistaはもちろん、台湾、そしてフランスなど海外からも参加者が訪れました。

参加前
======
参加前に、guidebookを筆者のiPhoneにインストールし、それをつかって自分オリジナルのスケジュールを組んで参加しました。
全体のスケジュールから、自分の見たい講演をセレクトすることで、自分だけのスケジュールを作ることが出来て大変便利でした。次回もぜひ、用意して欲しいと思いました。

.. figure:: /_static/h_guidebook.jpg
   :scale: 40%

   事前に配布されたguideapp。自分好みのスケジュールが作れる

受付
====
会場に到着して受付をすませました。はがきサイズの名札にマジックで自分の名前と書きます。今回は海外からの参加者も意識してか、英語OKか日本語OKかを示す箇所もありました。

.. figure:: /_static/h_name.jpg
   :scale: 50%

   自分の名前を大きく書きます

さらに、お土産としてPythonステッカーと金太郎飴、さらにバッジが配布されました。後で発覚したのですが、この金太郎飴を舐めると舌が真っ赤になるようです。

.. figure:: /_static/h_omiyage.jpg
   :scale: 50%

   参加者へのお土産です

Keynote
========

.. figure:: /_static/h_tarek.jpg
   :scale: 50%

   講演するTarek氏

早速カンファレンススタートです。まず最初は、「エキスパートPythonプログラミング」の原著者であるTarek Ziadé氏がはるばるフランスから来日し、パッケージングとPython3について話してくれました。

パッケージングについて
-----------------------
まず始めに、パッケージングについての、依存関係、setup.pyの役割、パッケージ管理システム、バージョン管理の仕組み、データファイルの定義についてひと通り問題点と解決法を示した後で、パッケージングについて以下の様にまとめました。

- `PEP386 <http://www.python.org/dev/peps/pep-0386/>`_ 準拠のバージョン体系を使うこと
- できるだけひとまとめにsetup.pyを作ること
- インストーラの利用を前提としないこと
- PyPIには不安定版をリリースしないこと
- データファイルに気をつけること

パッケージングにはあまり縁のない筆者でしたが、なんだか「Pythonらしさ」を感じたような気がしました。

Python3について
---------------
次は、Python3への移行についてでした。

講演当日でPython3系は3.2までリリースされており、パッケージはすこしずつではあるが、コンスタントにPython3への対応を進めているとのことでした。Python2系のアップデートでは機能追加はもう無いことを強調していました。
DistributeやNumpy/Scipy,SQLAlchemyなどのパッケージがPython3対応をする中で、Djangoなどの大きなフレームワークがまだ移行できていないことは移行が進まない原因なのではないかとしました。
また、PyPyがPython2しか対応していないのもPython3への移行が進まない原因とも示しました。

Python3への移行を気にせずPythonを使ってきた筆者ですが、個人的に利用しているライブラリなどはほとんどPython3対応してきていることを知り、パッケージングの状況なども含めてPython3への移行をはじめようと思う良いきっかけになるセッションでした。

C API への誘(いざな)い
=======================

.. figure:: /_static/h_cocoatomo.jpg
   :scale: 50%

次はPython公式ドキュメントの翻訳で知られる、@cocoatomoさんによるPython C/APIのセッションをご紹介します。PythonからCを使えたり、CからPythonを使えるようになっていることは知っていても、実際の使い方などについては知らないという人も多いのではないでしょうか。

C API
-----
C APIは、CからPythonが使えるだけでなく、PythonからもCが使える機能です。Cからは、GCにメモリ開放を任せることが出来たり、文字列操作などが出来たり便利ライブラリとして使うことが出来るようでした。Pythonからは、インタプリタの拡張として、さらにモジュールの拡張としてCで記述することで高速化出来るとのことでした。
ちなみに、CPython自体もこのC APIを使って実装されています。

C APIの使い方
-------------
使い方ですが、公式ドキュメントや、チュートリアルが整備されているので、そちらを参考にするのが良いとのことでした。また、 `cocoatomoさんのスライド <https://docs.google.com/present/view?id=dchk96tc_2ftxfgqck&pli=1>`_ も分かりやすくまとまっているので、そちらを参考になると思います。また、 `講演の録画 <http://www.ustream.tv/recorded/16895208>`_ がUstreamから視聴できますので、そちらを御覧ください！

CによるOOP
----------
Pythonはいわゆるオブジェクト指向プログラミング言語ですが、Cにその機能はありません。クラスを構造体に、メソッドを関数ポインタに置き換えることでその実装を可能にしているとのことでした。とても素直ですね。
Pythonのメソッド宣言で書くことになるselfについて、「Cにはメソッド呼び出しが無いため、selfを第一引数に入れる必要があるのは自然だと感じられた」とスピーカーのcocoatomoさんは語っていました。

Python/C APIは遠い存在だと思っていた筆者ですが、今回のセッションで身近に感じることができ、何か機会があれば使ってみたいと思うようになりました。


Pythonエンジニアの作り方
========================

.. figure:: /_static/h_tk0miya1.jpg
   :scale: 50%

   講演する@tk0miya氏

次はblockdiagシリーズで知られる@tk0miyaさんによるセッション、「Pythonエンジニアの作り方」をご紹介します。

Pythonとの出会い
-----------------
高校からC言語を始め、RubyやPerlなどの言語に触れていた@tk0miyaさん。自身のことを「ギークになりたいギーク見習い」と称していました。僕も今、そんな心境な気がしてその言葉にとても共感しました。そして、同僚のPythonエンジニアの清水川さんに勧められ、付き合いで使ってみたことがPythonとの出会いだったようです。

Pythonでの開発
--------------

.. figure:: /_static/h_tk0miya2.jpg
   :scale: 50%
   
   決心を語る@tk0miya氏

仕事で画面遷移図をVisioで作る機会があった@tk0miyaさんですが、とても時間がかかるので、ツールを作ってみようと思い、せっかくならPythonで作ることにしたようです。「せっかくアイディアを思いついたので作ろう、必ずリリースしよう、そして新しい技術を取り入れよう」という決心をして開発に取り組んでみることにしたといいます。そうして開発したのが `blockdiag <http://blockdiag.com/>`_ シリーズでした。


リリース≠公開
--------------
「実際にアップロードしただけじゃ、使ってもらえない」と気づき、勉強会などで作ったツールを発表することを繰り返し、9ヶ月で14回もの発表をしたといいます。それは日本だけではなく、世界まで飛び出し、ヨーロッパのカンファレンス「 `EuroPython <http://europython.eu/>`_ 」でも発表したとのことでした。
その時気をつけたことは、Demonstrableな発表。「百見は一見にしかずで、デモが重要。皆さんにもおすすめしたい。」と、デモを発表を組み込むことをすすめていました。僕もデモを心がけてみようと思いました。

Blockdiag開発をして得たもの
----------------------------
そして、Blockdiag開発を通して得たものについて語ってくれました。本やWebで技術について「勉強」することと、実際に「開発」することの違いや、自分からコミュニティにアウトプットしたことで、何か知りたい時に情報を教えてくれるようになった、そして何よりも開発者が物を作り、ユーザーが開発者にフィードバックするサイクルを得られたなど、得たものは大きかったと言います。

まとめ
-------
最後に@tk0miyaさんは「一歩踏み始めれば、次の一歩、もう一歩が続いていく」と語った上で、次のようにまとめました。

- ソフトウェアを開発しよう：アイディアのない人は、既存のOSSへの参加を
- 発信しよう：得た情報はブログや勉強会でアウトプット「アウトプットする時、絶対に否定されない、バカにされない」
- 楽しくなくなったら、辞めても良いのでは
- 勉強会やSprint, Hack-a-thonなどで仲間を作ろう

なかなか長くなってしまったのは、共感できる部分が多く、皆さんにお伝えしたいと思ったからです。僕はまだ、良いアイディアが無いので、既存のOSSへ何かコミットできたらいいな、と思いました。


ランチとコーヒーブレイク
=========================
さて、お昼ごはんの時間です。PyCon JPでは、食堂に参加者が集まりお昼ごはんを共に食べます。今回はこちらのサンドイッチと、飲み物が参加者に手渡されました。

.. figure:: /_static/h_lanch.jpg
   :scale: 50%
   
   昼食として出たサンドイッチ　美味しかったです

3時にはコーヒーブレイクも行われ、お昼に昼食を食べた場所でおやつとコーヒーや紅茶を楽しみながら、参加者と会話する時間も1時間ほど、たっぷりと設けられました。「出会い系Python」のテーマに基づいて様々な工夫がされているのがわかります。

.. figure:: /_static/h_coffee1.jpg
   :scale: 50%

   参加者は自由にお茶やコーヒーが飲める

.. figure:: /_static/h_coffee2.jpg
   :scale: 50%

   PCを開いて議論を始める参加者も

Guidoへの５つの質問
===================
本イベントの開催前、イベントの参加者からPython開発者のGuidoさんへ答えて欲しい質問が募集され、このセクション内でそれらの質問の回答が発表されました。質問の内容は「Python以外で言語を勧めるなら何？」や「Python3に移行する上で重要なことは？」などがありました。紙面の都合上紹介はしませんが、詳細な回答は `こちら <http://2011.pycon.jp/program/five-questions-to-guido>`_ にありますので興味のある方はぜひ読んでみてください。


Pythonで創るソーシャルゲームの未来
==================================

.. figure:: /_static/h_social.jpg
   :scale: 50%

   講演する堀内氏

PyCon JP 2011のGold Sponserである株式会社gumiの堀内さんから、PythonとDjangoを使い創ったソーシャルゲームの技術的な解説と、ソーシャルゲーム界の現状についてお話されました。

広がるソーシャルゲーム市場
---------------------------
コンシューマの市場が縮む一方で、ソーシャルゲームの市場はどんどん増え、映画産業やコンシューマゲーム産業と同等の市場になっているとgumiの堀内さんは語ります。しかしその一報、SAP(Social Application Provider)によるゲームは毎月多くのゲームが発表され、飽和状態にもなっている現状も示しました。「決算システムのあるSNS内のユーザーにゲームを提供するという仕組みも、なかなか難しくなっている」と語り、「よって、SAPの中でもTOP5くらいに入らないと厳しくなっている」とソーシャルゲーム界の厳しさを語りました。
ソーシャルゲーム界、なかなか厳しいですね…

億単位のPVを支えるPythonシステム
---------------------------------
主にゲームは1ゲーム8人のチームを組み、2~3ヶ月でとりあえず作り、うまく行けば大きなチームにしていく流れを取っているようでした。密な勉強会でスキルを高めているとのことでした。厳しいソーシャルゲーム業界では、特にスキルアップが重要そうですね。
そんなソーシャルゲーム界で、億単位のPVを支えているシステム。その内部をお話ししてくれました。使っているアプリケーションや、工夫などについては講演の録画がUstreamにありますので、気になる方は見ていただけたらなと思います。

Pythonを使った理由
------------------
講演後の質問で「ソーシャルアプリはphpがメジャー、2DゲームならRuby on Railsがメジャーだと思うが、Pythonを使った理由は？良かったこと、困ったことは？」という質問がありましたが、それに対して「Pythonが好きなエンジニアが居たため。Pythonという単語で興味を持ってくれる人が技術志向の強いひとが多いので合っている。大規模開発において、習得が早いのが良いところだと思った。RubyonRailsでもそうだが、Djangoというフレームワークがあって、後方互換性なども面倒を見てくれて安定してくれるのがとても良い。Pythonで特別困った事はなかった。」と返答していました。

どんどん大きな市場になっているソーシャルゲーム。沢山のPVを支える裏では、トラブル時の対応や拡張への準備などがしっかりと行われている事がわかりました。今後は、海外市場へも挑戦していくようです。

PyQtで始めるGUIプログラミング
=============================

.. figure:: /_static/h_pyqt.jpg
   :scale: 50%

   講演する@ransui氏

次はこちらのセッションを紹介したいと思います。@ransuiさんによるPyQtのセッションです。

PyQtとは？
----------
Qtという、クラスプラットフォームのC++総合ライブラリが存在しますが、それをPythonから使うことの出来るPyQtがあります。PyQtは、本家Qtのバージョンアップへの対応は早く、主要なモジュールはほぼすべてサポートされているので便利に使うことができ、さらにC++とシームレスに繋がるように設計されているので使いやすいとのことでした。

PyQtでGUIプログラミング
------------------------
GUIプログラミングをするわけですが、いきなりコードを書き始めたりせず、しっかりと「デザイン」をすることが大切と@ransuiさんは語っていました。
「設計ではなく、デザインを繰り返すことが大事だ」と繰り返していました。
スライドがとても詳しくまとまっており、スライド自体がチュートリアルになるので、興味の有る方は `ここ <http://www.slideshare.net/RansuiIso/pyqtgui>`_ からスライドを読んでいただくか、Ustreamに `講演の録画 <http://www.ustream.tv/recorded/16898833>`_ があるのでそちらをご覧ください。（と、@ransuiさんもおっしゃっていました）

プログラミングを始めた頃は、GUIのプログラミングに憧れたものでした。でもなかなかそこまでたどり着くことは出来ずにいました。これを機会に、PyQtをつかったGUIプログラミングをスタートしてみたいなと思いました。ちなみにPyQtは、GUIだけではなく他の機能も充実しているので、単純に便利ライブラリとして使うこともおすすめされていました。

Lightning Talks
===============
クロージングでは、参加者によるLTのコーナーがありました。総勢10名によるLTが行われましたが、今回は筆者が気になったものを選んでお伝えします。ここで紹介できなかったLTについてはUstreamで `LTの録画 <http://www.ustream.tv/recorded/16901398>`_ が残っていますので気になる方はぜひご覧ください。


pyssp:Pythonによる教育向け音声信号ライブラリ
--------------------------------------------

.. figure:: /_static/h_sound.jpg
   :scale: 50%

   講演する粟飯原氏

粟飯原さんによる教育向け音声信号ライブラリの紹介です。
 `pyssp <https://bitbucket.org/ynil/pyssp/>`_ は音声信号処理用のライブラリで、簡潔で使いやすく、わかりやすく扱えるようになっているようです。機能としてはノイズ除去、カラオケトラックを用いて歌声を抽出するなどがあげられ、デモも行われました。Ustreamでその模様は聞くことができるので、ぜひ聞いてみてください。とてもクリアなっています。
「自然言語、画像処理は盛り上がっているが、音声信号処理はあまりないので作った」と粟飯原さん。こちらの分野でもPythonがもっと活躍すると良いと思いました。

CG業界とPython紹介
------------------

.. figure:: /_static/h_cg.jpg
   :scale: 50%

   講演する@alpaca3氏

CGプロダクションに所属している@alpaca3さんからのLTを紹介します。
「CG業界でプログラミングとなると、作業の効率化、ソフトでできない表現の追加を行う。しかし日本には、開発部署を持っている会社は多くない。」と@alpaca3さん。今まではそれぞれのソフトウェアが独自の言語でAPIを作っていたようですが、最近はどれもPython対応が進み、ほとんどがPythonで書けるようになったといいます。CGソフト以外との連携や、Classの機能、ソフト間でほぼ共通のスクリプトで動くなど、とてもメリットがたくさんあるといいます。

CG業界でこんなにもPythonが使われているとは驚きでした。Pythonの柔軟性に驚かされたLTでした。

Unihandecode
-------------

.. figure:: /_static/h_unihandecode.jpg
   :scale: 70%

   講演する三浦氏

次に三浦さんによるLTを紹介します。
Kindleを購入した三浦さん。日本語のものが読んでみたいと思いCalibreというソフトを使ってみますが、漢字をよみがなに変換したものが正しくディレクトリに名前として付きません。原因を色々たどってみると `Unidecode <http://interglacial.com/tpj/22/>`_ というライブラリにたどり着きますが、日本語への対応が全くされていないことに気づきます。そして出来たのが `Unihandecode <https://launchpad.net/unihandecode>`_ でした。実はPlone内でも同じ問題が起きていたようで、Ploneユーザーの間で歓声が沸き上がっていました。

Oktest
-------

.. figure:: /_static/h_oktest.jpg
   :scale: 50%

   講演する桑田氏

次に桑田さんによるLTを紹介します。
Pythonでテストをする際、unittestを使うがメソッド名が長すぎると問題を掲げ、Perlの簡潔な"ok"や"is"などの簡単な表記であるべきだと主張しました。
そこで作られた `Oktest <http://packages.python.org/Oktest/>`_ 、このPythonで短くテストを書くために作られたライブラリではPerlの様に簡潔にテストを書くことが出来るのはもちろん、デコレータを使って何のテストをしているのかを分かりやすく記述できるなど、便利にできていました。

アプリケーションを作る際、テストをしたことはまだ無いですが、もしテストを行う機会があれば、ぜひこのライブラリを使ってみたいなと思いました。

クロージング
=============
最後に、LT会場に残り参加者とスタッフが集合し、クロージングが行われました。フランスからKeynoteのため来日したTarekさんからは「楽しい会でした、また会いましょう！」とのメッセージが、そして座長・寺田さんからは「来年も一年後、このような会を継続してやっていきたい。」「ぜひ地方のイベントなども開いてみて欲しい」との挨拶と、参加者へのお礼でPyCon JP 2011本編は終了しました。

まとめ
======
今回のPyCon JP 2011は、200人を超え、250人近くの参加者が訪れました。今回これだけのPythonistaが集まり、情報交換が出来たことだけでもとても素敵な事だと思いました。
私個人としては、CG業界やC API、音声処理からGUIなど、普段なかなか触れることのなかった分野について知り、興味を持てたことはとても有意義な会だったと感じています。
しかし一方で、海外からの参加者とコミュニケーションが取れなかったことを残念に思い、次回機会があればコミュニケーションにチャレンジしたいと決心しました。（出会い系Pythonがテーマだったというのに！）

それでは、来年もきっとPyCon JP 2012が開催されることを祈って、この記事を終わりにしたいと思います。
